{"ast":null,"code":"var _jsxFileName = \"/home/udit/Desktop/test-app/src/components/addProductForm/addProductForm.jsx\";\nimport React, { Component } from \"react\";\nimport \"./addProductForm.css\";\nexport class AddProductForm extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = (key, event) => {\n      this.setState({\n        [key]: event.target.value\n      });\n    };\n\n    this.addDescription = () => {\n      this.setState(prev => ({\n        description: [...prev.description, {\n          key: 'KEY',\n          value: 'VALUE'\n        }]\n      }));\n    };\n\n    this.addDescriptionKey = (key, index) => {\n      this.setState(prevState => {\n        let descriptionArray = prevState.description;\n        let description = prevState.description[index];\n        description.key = key;\n        descriptionArray[index] = description;\n        return {\n          description: [...descriptionArray]\n        };\n      });\n    };\n\n    this.renderDescriptionForm = () => {\n      const description = this.state.description;\n      return description.map((x, index) => {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"form-element\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"input-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: `key${index}`,\n          placeholder: Object.keys(description[index])[0],\n          onChange: e => addDescriptionKey(e.target.value, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"input-div\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          name: `value${index}`,\n          placeholder: description[index][Object.keys(description[index])[0]],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })));\n      });\n    };\n\n    this.handleDescriptionKeyChange = (index, e) => {\n      this.setState(prev => {});\n    };\n\n    this.state = {\n      name: '',\n      brand: '',\n      type: '',\n      category: '',\n      count: 0,\n      price: 0,\n      description: [{\n        key: \"KEY\",\n        value: \"VALUE\"\n      }],\n      descriptionSize: 0\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          brand = _this$state.brand,\n          type = _this$state.type,\n          category = _this$state.category,\n          count = _this$state.count,\n          price = _this$state.price,\n          description = _this$state.description,\n          descriptionSize = _this$state.descriptionSize;\n    return React.createElement(\"form\", {\n      className: \"add-product-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name:\")), React.createElement(\"div\", {\n      className: \"input-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: e => {\n        this.handleChange('name', e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Brand:\")), React.createElement(\"div\", {\n      className: \"input-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"brand\",\n      value: brand,\n      onChange: e => {\n        this.handleChange('brand', e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"label-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Type:\")), React.createElement(\"div\", {\n      className: \"input-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"type\",\n      value: type,\n      onChange: e => {\n        this.handleChange('type', e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: 4,\n      cols: 50,\n      placeholder: 'Description',\n      onChange: e => {\n        this.setState({\n          description: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default AddProductForm;","map":{"version":3,"sources":["/home/udit/Desktop/test-app/src/components/addProductForm/addProductForm.jsx"],"names":["React","Component","AddProductForm","constructor","handleChange","key","event","setState","target","value","addDescription","prev","description","addDescriptionKey","index","prevState","descriptionArray","renderDescriptionForm","state","map","x","Object","keys","e","handleDescriptionKeyChange","name","brand","type","category","count","price","descriptionSize","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./addProductForm.css\";\n\nexport class AddProductForm extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            name: '',\n            brand: '',\n            type: '',\n            category: '',\n            count: 0,\n            price: 0,\n            description: [{key: \"KEY\", value: \"VALUE\"}],\n            descriptionSize: 0,\n        }\n    }\n\n    handleChange = (key, event) => {\n\n        this.setState({\n            [key]: event.target.value,\n        })\n    }\n\n\n    addDescription = () => {\n        this.setState(prev =>({\n            description: [...prev.description, {key: 'KEY', value: 'VALUE'}]\n        }))\n    }\n\n    addDescriptionKey = (key, index) => {\n        this.setState(prevState => {\n            let descriptionArray = prevState.description;\n            let description =  prevState.description[index];   \n            description.key = key;    \n\n            descriptionArray[index] = description;\n\n            return { description: [...descriptionArray] };\n        });\n    }\n\n    renderDescriptionForm = () => {\n\n        const {description} = this.state;\n\n        return description.map((x,index) => {\n            return (\n                <div key={index} className=\"form-element\">\n                        <div className=\"input-div\">\n                             <input type=\"text\" name={`key${index}`} placeholder={Object.keys(description[index])[0]} onChange={(e) => addDescriptionKey(e.target.value, index)}/>\n                        </div>\n                        <div className=\"input-div\">\n                            <input type=\"text\" name={`value${index}`} placeholder={description[index][Object.keys(description[index])[0]]}/>\n                        </div>\n                </div>\n            );\n        });\n    }\n\n    handleDescriptionKeyChange = (index, e) => {\n        this.setState(prev => {\n\n            \n        })\n    }\n\n    render() {\n\n        const { name, brand, type, category, count, price, description, descriptionSize } = this.state;\n\n        return (\n            <form className=\"add-product-form\">\n                <div className=\"form-element\">\n                    <div className=\"label-div\">\n                        <label for=\"name\">Name:</label>\n                    </div>\n                    <div className=\"input-div\">\n                        <input type=\"text\" name=\"name\" value={name} onChange={(e) =>  {this.handleChange('name',e)}}/>\n                    </div>\n                    <div className>\n\n                    </div>\n                </div>\n                <div className=\"form-element\">\n                    <div className=\"label-div\">\n                        <label for=\"brand\">Brand:</label>\n                    </div>\n                    <div className=\"input-div\">\n                        <input type=\"text\" name=\"brand\" value={brand} onChange={(e) =>  {this.handleChange('brand',e)}}/>\n                    </div>\n                </div>\n                <div className=\"form-element\">\n                    <div className=\"label-div\">\n                        <label for=\"type\">Type:</label>\n                    </div>\n                    <div className=\"input-div\">\n                        <input type=\"text\" name=\"type\" value={type} onChange={(e) =>  {this.handleChange('type',e)}}/>\n                    </div>\n                </div>\n                <div>\n                    <textarea rows={4} cols={50} placeholder={'Description'} onChange={(e) => {\n                        this.setState({\n                            description: e.target.value\n                        })\n                    }}/>\n                </div>\n                {/* <div className=\"description-element\">\n                    <h4 onClick={this.addDescription}>Add Details</h4>\n                    <div className=\"body\">\n                        {\n                            this.renderDescriptionForm()\n                        }\n                    </div>\n                </div> */}\n            </form>\n        );\n    }\n}\n\nexport default AddProductForm;\n"]},"metadata":{},"sourceType":"module"}